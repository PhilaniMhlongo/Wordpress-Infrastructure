Description: WordPress Infrastructure

Parameters:
  VPCStackName:
    Type: String
    Description: Name of the VPC Stack that this template will reference
    Default: NjomaneIndustriesVPC
  DBPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Password for WordPress database
  DBRootPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Root password for RDS instance

Resources:
  WordPressLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: WordPress
      VersionDescription: WordPress Application Server
      LaunchTemplateData:
        ImageId:
          Fn::Sub: "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64}}"
        InstanceType: t3.micro
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VPCStackName}-SGWordpress
        IamInstanceProfile:
          Name: !ImportValue
            Fn::Sub: ${VPCStackName}-WordpressInstanceProfile
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe

            DBPassword=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/DBPassword --with-decryption --query Parameters[0].Value)
            DBPassword=`echo $DBPassword | sed -e 's/^"//' -e 's/"$//'`

            DBUser=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/DBUser --query Parameters[0].Value)
            DBUser=`echo $DBUser | sed -e 's/^"//' -e 's/"$//'`

            DBName=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/DBName --query Parameters[0].Value)
            DBName=`echo $DBName | sed -e 's/^"//' -e 's/"$//'`

            DBEndpoint=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/DBEndpoint --query Parameters[0].Value)
            DBEndpoint=`echo $DBEndpoint | sed -e 's/^"//' -e 's/"$//'`

            EFSFSID=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/EFSFSID --query Parameters[0].Value)
            EFSFSID=`echo $EFSFSID | sed -e 's/^"//' -e 's/"$//'`

            ALBDNSNAME=$(aws ssm get-parameters --region ${AWS::Region} --names /NjomaneIndustries/Wordpress/ALBDNSNAME --query Parameters[0].Value)
            ALBDNSNAME=`echo $ALBDNSNAME | sed -e 's/^"//' -e 's/"$//'`

            # Install packages
            dnf install wget php-mysqlnd httpd php-fpm php-mysqli mariadb105-server php-json php php-devel stress amazon-efs-utils -y

            # Start and enable Apache
            systemctl enable httpd
            systemctl start httpd

            # Download and configure WordPress
            wget http://wordpress.org/latest.tar.gz -P /var/www/html
            cd /var/www/html
            tar -zxvf latest.tar.gz
            cp -rvf wordpress/* .
            rm -R wordpress
            rm latest.tar.gz

            # Configure wp-config.php
            cp ./wp-config-sample.php ./wp-config.php
            sed -i "s/'database_name_here'/'$DBName'/g" wp-config.php
            sed -i "s/'username_here'/'$DBUser'/g" wp-config.php
            sed -i "s/'password_here'/'$DBPassword'/g" wp-config.php
            sed -i "s/'localhost'/'$DBEndpoint'/g" wp-config.php

            # Mount EFS
            mkdir -p /var/www/html/wp-content
            echo -e "$EFSFSID:/ /var/www/html/wp-content efs _netdev,tls,iam 0 0" >> /etc/fstab
            mount -a -t efs defaults

            # Set permissions
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;

            # Update WordPress URL
            cat >> /home/ec2-user/update_wp_ip.sh<< 'EOF'
            #!/bin/bash
            source <(php -r 'require("/var/www/html/wp-config.php"); echo("DB_NAME=".DB_NAME."; DB_USER=".DB_USER."; DB_PASSWORD=".DB_PASSWORD."; DB_HOST=".DB_HOST); ')
            SQL_COMMAND="mysql -u $DB_USER -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e"
            OLD_URL=$(mysql -u $DB_USER -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e 'select option_value from wp_options where option_name = "siteurl";' | grep http)

            $SQL_COMMAND "UPDATE wp_options SET option_value = replace(option_value, '$OLD_URL', 'http://$ALBDNSNAME') WHERE option_name = 'home' OR option_name = 'siteurl';"
            $SQL_COMMAND "UPDATE wp_posts SET guid = replace(guid, '$OLD_URL','http://$ALBDNSNAME');"
            $SQL_COMMAND "UPDATE wp_posts SET post_content = replace(post_content, '$OLD_URL', 'http://$ALBDNSNAME');"
            $SQL_COMMAND "UPDATE wp_postmeta SET meta_value = replace(meta_value,'$OLD_URL','http://$ALBDNSNAME');"
            EOF

            chmod 755 /home/ec2-user/update_wp_ip.sh
            echo "/home/ec2-user/update_wp_ip.sh" >> /etc/rc.local
            /home/ec2-user/update_wp_ip.sh

  WordPressDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: njomaneindustrieswordpressdb
      Engine: MySQL
      MasterUsername: njomaneindustrieswordpressuser
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: db.t3.micro
      AllocatedStorage: "20"
      VPCSecurityGroups:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SGDatabase
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: WordPress RDS Subnet Group
      SubnetIds:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNDBA
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNDBB
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNDBC

  WordPressEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      Encrypted: false
      BackupPolicy:
        Status: ENABLED
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS

  MountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref WordPressEFS
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-SNAPPA
      SecurityGroups:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SGEFS

  MountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref WordPressEFS
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-SNAPPB
      SecurityGroups:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SGEFS

  MountTargetC:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref WordPressEFS
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-SNAPPC
      SecurityGroups:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SGEFS

  WordPressALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: NJOMANEINDUSTRIESWORDPRESSALB
      Scheme: internet-facing
      SecurityGroups:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SGLoadBalancer
      Subnets:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBA
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBB
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref WordPressALB
      Port: 80
      Protocol: HTTP

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: "80"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: A4LWORDPRESSALBTG
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC

  WordPressASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: NJOMANEINDUSTRIESWORDPRESSASG
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref WordPressLaunchTemplate
        Version: !GetAtt WordPressLaunchTemplate.LatestVersionNumber
      MaxSize: 3
      MinSize: 1
      DesiredCapacity: 1
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      VPCZoneIdentifier:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBA
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBB
        - !ImportValue
          Fn::Sub: ${VPCStackName}-SNPUBC
      Tags:
        - Key: Name
          Value: WordPress-ASG
          PropagateAtLaunch: true

  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WordPressASG
      PolicyType: SimpleScaling
      ScalingAdjustment: 1

  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WordPressASG
      PolicyType: SimpleScaling
      ScalingAdjustment: -1

  CPUHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale up if CPU > 40% for 1 minute
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 40
      AlarmActions:
        - !Ref ScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WordPressASG
      ComparisonOperator: GreaterThanThreshold

  CPULowAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 1 minute
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 40
      AlarmActions:
        - !Ref ScaleDownPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WordPressASG
      ComparisonOperator: LessThanThreshold

  DBEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/DBEndpoint
      Type: String
      Value: !GetAtt WordPressDB.Endpoint.Address
      Description: WordPress Database Endpoint

  EFSFSIDParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/EFSFSID
      Type: String
      Value: !Ref WordPressEFS
      Description: WordPress EFS File System ID

  ALBDNSNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/ALBDNSNAME
      Type: String
      Value: !GetAtt WordPressALB.DNSName
      Description: WordPress ALB DNS Name

  DBPasswordParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/DBPassword
      Type: String
      Tier: Standard
      DataType: text
      Value: !Ref DBPassword
      Description: WordPress Database Password

  DBUserParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/DBUser
      Type: String
      Value: njomaneindustrieswordpressuser
      Description: WordPress Database User

  DBNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /NjomaneIndustries/Wordpress/DBName
      Type: String
      Value: njomaneindustrieswordpressdb
      Description: WordPress Database Name

Outputs:
  LoadBalancerDNS:
    Description: DNS Name of the Application Load Balancer
    Value: !GetAtt WordPressALB.DNSName

  EFSFileSystemId:
    Description: EFS File System ID
    Value: !Ref WordPressEFS

  DatabaseEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt WordPressDB.Endpoint.Address
